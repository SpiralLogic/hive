.tile.player0 {
    --background: var(--p0background);
    --creature: var(--p0creature);
    --shadow: var(--p0shadow);
}

.tile.player1 {
    --background: var(--p1background);
    --creature: var(--p1creature);
    --shadow: var(--p1shadow);
}

.tile {
    width: var(--tile-size);
    height: var(--tile-size);
}

.tile use:nth-child(2) {
    pointer-events: none;
    fill: var(--creature);
}

.tile:not([draggable='true']) {
    opacity: 0.3;
}

[role='cell'] .tile {
    margin: 0;
}

.game-over .tile,
.tile[draggable='true'] {
    opacity: 1;
}

[role='cell'].historical .tile {
    opacity: .7;
}

[role='cell'].can-drop .tile:not(.selected) {
    pointer-events: none;
    opacity: 1;
}

.tile.stacked:not([draggable='true'], :hover, :active) ~ .tile {
    opacity: 0;
}

.tile.selected {
    transform: rotate(-3deg);
    animation: selected 0.2s infinite;
    opacity: 1;
}

main.player1 .tile.player1.selected:hover,
main.player0 .tile.player0.selected:hover {
    transform: none;
    animation: none;
}

[role='cell'] .tile.stacked:hover {
    animation: stacked 3s;
}

[role='cell'].historical {
    fill: var(--focus);
    opacity: .7;
}

[draggable='true']:not(.selected):where(:hover, :focus)::before {
    --shadow: var(--focus);
}

.tile.selected::before,
[draggable='true']:not(.selected):where(:hover, :focus)::before {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 90%;
    height: 50%;
    margin: 25% 5%;
    content: ' ';
    transition: box-shadow 0.2s ease-in;
    outline: none;
    box-shadow: 0 calc(var(--tile-size) / -4) calc(var(--tile-size) / 3) 0.5vh var(--shadow),
    0 calc(var(--tile-size) / 4) calc(var(--tile-size) / 3) 0.5vh var(--shadow),
    0 0 calc(var(--tile-size) / 3) 0.5vw var(--shadow);
}

.before-drag::before {
    background: transparent !important;
    
    --shadow: none;
}

@keyframes selected {
    0% {
        transform: rotate(-1deg);
    }

    50% {
        transform: rotate(1deg);
    }
}

@keyframes stacked {
    20% {
        opacity: 0.1;
        transition-timing-function: ease-in;
    }

    100% {
        opacity: 1;
        transition-timing-function: ease-out;
    }
}

@media only screen and (width <= 720px) {
    [role='cell'] .tile.stacked:hover:active {
        animation: stacked 3s;
    }
}
