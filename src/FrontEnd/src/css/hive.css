body {
  margin: 0;
  --focus: #1712A2A0;
  --p0background: #FFEE0B;
  --p0creature: #000000;
  --p0outline0: #D2116AA0;
  --p1background: #000000;
  --p1creature: #FFEE0B;
  --p1outline: #8A2BE2A0;
  --hex-offset: -1;
  --hex-size: 95px;
  --tile-size: 70px;
  overscroll-behavior-y: contain;
}

body > svg {
  display: none;
}

.hive {
  display: inline-grid;
  width: 100vw;
  height: 100vh;
  user-select: none;
  grid-template-columns: max-content max-content auto;
  
}

.players {
  display: contents;
  border-radius: 0.1rem;
}

.player {
  display: inline-grid;
  transition: 1s ease-out;
  transition-property: width, height, border, padding;
  border-right: 1px solid white;
  background-color: rgba(0, 0, 0, 0.7);
  grid-auto-flow: row;
  grid-template-rows: max-content auto;
  overflow-y: auto;
}

.player.hiding {
  width: var(--tile-size);
}

.player.hide {
  width: 0;
  padding: 0;
  border: 0;
}

.player0 {
  --background: var(--p0background);
  --creature: var(--p0creature);
  --outline: var(--p0outline0);
}

.player1 {
  --background: var(--p1background);
  --creature: var(--p1creature);
  --outline: var(--p1outline);
}

.name:focus {
  text-decoration-color: var(--creature);
}

.player .name {
  font-size: 1.5em;
  font-weight: bold;
  justify-content: center;
  margin: 2vh 0;
  text-align: center;
  color: white;
  outline: none;
}

.player .tile {
  margin: 2px;
  --focus: #1A1A1DCC;
}

.player .tiles {
  display: inline-grid;
  align-items: center;
  justify-content: flex-start;
  padding: 1vh 1vw 0;
  transition: all 0.1s ease-in;
  overflow:  hidden auto ;
  grid-auto-flow: row;  
}

.player .tiles::-webkit-scrollbar {
  width: 5px;
  height: 6px;
  background-color: transparent; /* or add it to the track */
}

/* Add a thumb */
.player .tiles::-webkit-scrollbar-thumb {
  background: #27272B;
}

.hex-container {
  display: grid;
  overflow: auto;
  align-items: center;
  background: #1A1A1D;
}

.hextille {
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  border-radius: 0.05rem;
  --focus: #1712A290;
}

.hex-row {
  display: inline-flex;
  flex-direction: row;
  min-width: calc(2 * var(--hex-size));
  margin: calc(var(--hex-size) * -0.1) 0;
}

.hex-row:nth-child(1) {
  margin-top: 0;
}

.hex-row:last-child {
  margin-bottom: 0;
}

.right > .hex-row:nth-child(even),
.left > .hex-row:nth-child(odd) {
  transform: translateX(calc(var(--hex-size) / 2));
}

.hex {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: var(--width);
  min-width: fit-content;
  height: var(--width);
  min-height: fit-content;
  margin: 0;
  transition: fill 0.1s ease-in;
  outline: none;
  fill: var(--background, #00000030);
}

.hex > * {
  position: absolute;
}

.hex > svg {
  pointer-events: none;
}

.hidden {
  width: var(--hex-size);
  margin: 0;
  background: transparent;
}

.hidden:last-child {
  display: none;
}

.hidden {
  width: var(--hex-size);
  margin: 0;
  background: transparent;
}

.cell {
  transition-timing-function: ease-in;
  transition-duration: .4s;
  transition-property: transform, margin;
  --width: var(--hex-size);
}

.cell.hide {
  margin: 0 0;
  transform: scale(0);
}

.cell .tile {
  margin: 0;
}

.cell .tile:not([draggable='true']) {pointer-events: none;}

.cell.no-drop.active,
.cell.no-drop:focus,
.cell.no-drop:hover {
  transition-duration: 0.1s;
  --focus: transparent;
  fill: #5D001E;
}

.cell.can-drop {
  fill: rgba(175, 210, 117, 0.2);
}

.cell.can-drop.active,
.cell.can-drop:hover,
.cell.can-drop:focus {
  fill: #AFD275;
}

.tile {
  --width: var(--tile-size);
}

.tile .creature {
  pointer-events: none;
  fill: var(--creature);
}

.cell.can-drop .tile:not(.selected),
.cell.no-drop .tile:not(.selected){
  pointer-events: none;
  opacity: 100%;
}

.tile[draggable='false'] {
  opacity: 30%;
}

.tile.selected {
  transform: rotate(-3deg);
  animation: selected 0.2s infinite;
}

.tile.selected:before,
[draggable='true']:not(.selected):hover:before,
[draggable='true']:not(.selected):focus:before {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 90%;
  height: 50%;
  margin: 25% 5%;
  content: ' ';
  transition: box-shadow 0.2s ease-in;
  outline: none;
  box-shadow: 0 -10px 2em 5px var(--shadow), 0 10px 2em 5px var(--shadow), 0 0 1em var(--shadow);
}

.tile.selected:before {
  --shadow: var(--outline);
}

[draggable='true']:not(.selected):hover:before,
[draggable='true']:not(.selected):focus:before {
  --shadow: var(--focus);
}

.beforeDrag:before {
  display: none !important;
  box-shadow: none !important;
}

@keyframes selected {
  0% {
    transform: rotate(-1deg);
  }
  50% {
    transform: rotate(1deg);
  }
}

@media only screen and (max-width: 720px) {
  body {
    margin: 0;
    --hex-size: 60px;
    --tile-size: 45px;
    filter: brightness(1.5);
  }

  .hive {
    gap: 0;
    grid-template-columns: unset;
    grid-template-rows: max-content max-content auto;
  }

  .players {
    position: sticky;
    top: 0;
    border-radius: 0;
  }

  .player {
    border-right-width: 0;
    grid-auto-flow: column;
    grid-template-columns: max-content auto;
    grid-template-rows: unset;
  }

  .player.hiding {
    width: auto;
    height: var(--tile-size);
  }

  .player.hide {
    width: auto;
    height: 0;
  }

  .player .name {
    align-self: center;
    justify-content: center;
    margin: 0 2vw;
  }

  .player .tiles {
    display: inline-grid;
    overflow: auto hidden;
    padding: 1vh 2vw;
    border-left: 1px inset #7318B133;
    grid-auto-flow: column;
  }

  .hex-container {
    overflow: auto;
  }

  .hextille {
    padding: 5vh;
    border-radius: 0;
  }

  .cell.can-drop {
    fill: #AFD275;
  }

  .tile.selected:before,
  [draggable='true']:not(.selected):hover:before,
  [draggable='true']:not(.selected):focus:before {
    box-shadow: 0 -7px 1em 5px var(--shadow), 0 7px 1em 5px var(--shadow);
  }
}

.rules {
  --hex-size: 50px;
  --tile-size: 40px
}

.rules .correct > svg {
  stroke: green;
  stroke-width: 2px;
}

.rules .correct {
  font-size: 1.5em;
  color: green;
}

.rules .tile {
  fill: white;
}

.rules .creature {
  fill: mediumpurple;
}
