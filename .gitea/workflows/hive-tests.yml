name: 'Hive Tests'
on:
  push:
    paths:
      - 'src/**'
      - '.github/**'
      - '.gitea/**'
jobs:
  BackEnd:
    runs-on: ubuntu-22.04
    name: 'Back End - Tests'
    defaults:
      run:
        working-directory: './src'
    steps:
      - uses: actions/checkout@v4
      - name: Setup - dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          include-prerelease: true
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('~/.nuget/packages/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install - dependencies
        run: dotnet restore
      - name: Test 
        run: |
            mkdir ./reports
            dotnet tool restore
            dotnet tool run dotnet-coverage collect --output-format cobertura dotnet test -c test ./
            dotnet tool run reportgenerator "-reports:./output.cobertura.xml" "-sourcedirs:./" "-assemblyfilters:+Hive.*;-*.Tests" "-targetdir:./reports"  -reporttypes:Html
            dotnet tool run dotnet-dotcover test -c Test --dcOutput=./reports/dotcover.html --dcReportType=HTML --dcHideAutoProperties "--dcFilters=+:Hive.*;-:*.Tests;-:function=.ctor"  ./

  FrontEnd:
    runs-on: ubuntu-22.04
    name: 'Front End - Lint - Tests'
    defaults:
      run:
        working-directory: './src/Hive.FrontEnd/'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          check-latest: true
      - name: Setup - pnpm
        run: npm install --location=global pnpm
      - uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: Install - dependencies
        run: pnpm install
      - name: Lint fix - Frontend
        run: pnpm lint:fix
      - name: Test - Frontend
        run: pnpm test

  container-test-job:
    runs-on: ubuntu-latest
    container:
      image: registry.lab.sorijen.net.au/build-image:latest
      volumes:
        - /drone/src/reports/:/drone/src/reports
      env:
        SONARQUBE_KEY: ${secrets.SONARQUBE_KEY}
        LANG: en_US.UTF-8
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    steps:
      - name: Sonar Scan
        run: | 
          sed -i "s~/source~/drone/src~g" /drone/src/ops/SonarQube.Analysis.xml
          node -v
          java -version
          # - dotnet tool restore
          dotnet-sonarscanner begin /k:hive /s:/drone/src/ops/SonarQube.Analysis.xml /d:sonar.token=$SONARQUBE_KEY
          dotnet build ./src
          dotnet-coverage collect --output-format xml dotnet test src
          dotnet-sonarscanner end /d:sonar.token=$SONARQUBE_KEY