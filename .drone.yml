kind: pipeline
type: kubernetes
name: hive

clone:
  depth: 1

steps:
  - name: frontend
    image: registry-proxy.lab.sorijen.net.au/library/node:18-alpine
    commands:
      - cd src/Hive.FrontEnd
      - npm i --location=global pnpm
      - pnpm install
      - pnpm test:all:report
      - mv reports/* /drone/src/reports/
      - cp -r /drone/src/reports/__coverage__ /drone/src/reports/frontend
    volumes:
      - name: reports
        path: /drone/src/reports
  - name: domain
    image: mcr.microsoft.com/dotnet/sdk:8.0.100-preview.2
    commands:
      - dotnet new tool-manifest || true
      - dotnet tool install dotnet-reportgenerator-globaltool
      - dotnet test --collect:"XPlat Code Coverage" ./src/Hive.Domain.Tests -c Test --settings ./src/Hive.Domain.Tests/runsettings.xml
      - mkdir -p ./domain-coverage/
      - mkdir -p ./reports/domain/
      - mv src/Hive.Domain.Tests/TestResults/**/coverage.opencover.xml ./domain-coverage/
      - cp ./domain-coverage/coverage.opencover.xml /drone/src/reports/domain-coverage.opencover.xml
      - mv ./domain-coverage/coverage.opencover.xml ./domain-coverage/domain-coverage.opencover.xml
      - dotnet reportgenerator "-reports:./domain-coverage/domain-coverage.opencover.xml" "-targetdir:/drone/src/reports/domain" -reporttypes:Html
    volumes:
      - name: reports
        path: /drone/src/reports
  - name: api
    image: mcr.microsoft.com/dotnet/sdk:8.0.100-preview.2
    commands:
      - dotnet new tool-manifest || true
      - dotnet tool install dotnet-reportgenerator-globaltool
      - dotnet test --collect:"XPlat Code Coverage" ./src/Hive.Api.Tests -c Test --settings ./src/Hive.Api.Tests/runsettings.xml
      - mkdir -p ./api-coverage/
      - mkdir -p ./reports/api/
      - mv src/Hive.Api.Tests/TestResults/**/coverage.opencover.xml ./api-coverage/
      - cp ./api-coverage/coverage.opencover.xml /drone/src/reports/api-coverage.opencover.xml
      - mv ./api-coverage/coverage.opencover.xml ./api-coverage/api-coverage.opencover.xml
      - dotnet reportgenerator "-reports:./api-coverage/api-coverage.opencover.xml" "-targetdir:/drone/src/reports/api" -reporttypes:Html
    volumes:
      - name: reports
        path: /drone/src/reports
  - name: sonar
    image: registry.lab.sorijen.net.au/sonar-scanner:latest
    depends_on:
      - frontend
      - domain
      - api
    volumes:
      - name: reports
        path: /drone/src/reports
    environment:
      LANG: en_US.UTF-8
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      SONARQUBE_KEY:
        from_secret: SONARQUBE_KEY
    commands:
      - sed -i "s~\.\./~Hive\.FrontEnd/~g" /drone/src/reports/__coverage__/lcov.info
      - sed -i "s~/source~/drone/src~g" /drone/src/ops/SonarQube.Analysis.xml
      - node -v
      - dotnet new tool-manifest || true
      - dotnet tool install dotnet-sonarscanner
      - dotnet sonarscanner begin /k:hive /s:/drone/src/ops/SonarQube.Analysis.xml /d:sonar.login=$SONARQUBE_KEY
      - dotnet build -c Test ./src
      - dotnet test ./src -c Test --collect:"XPlat Code Coverage" --settings ./src/Hive.Api.Tests/runsettings.xml
      - dotnet sonarscanner end /d:sonar.login=$SONARQUBE_KEY
  - name: build
    image: plugins/docker
    settings:
      registry: registry.lab.sorijen.net.au
      username: 
        from_secret: REGISTRY_USER
      password: 
        from_secret: REGISTRY_PASSWORD
      repo: registry.lab.sorijen.net.au/hive
      dockerfile: ops/dockerfile
      tags:
      - latest
      - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}
  - name: hive-test-results
    privileged: true
    image: plugins/docker
    depends_on:
      - frontend
      - domain
      - api
    volumes:
      - name: reports
        path: /drone/src/reports
    settings:
      registry: registry.lab.sorijen.net.au
      username: 
        from_secret: REGISTRY_USER
      password: 
        from_secret: REGISTRY_PASSWORD
      repo: registry.lab.sorijen.net.au/hive-test-results
      dockerfile: ops/dockerfile.test-results
      tags:
      - latest
      - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}
  - name: update-deploy
    image: alpine
    commands:
      - sed -i s~latest~${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}~g ops/k8s/hive-deployment.yaml
    depends_on:
      - build
      - sonar
  - name: test-results-update-deploy
    image: alpine
    commands:
      - sed -i s~latest~${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}~g ops/k8s/test-results-deployment.yaml 
    depends_on:
      - hive-test-results
  - name: deploy
    image: zc2638/drone-k8s-plugin
    pull: if-not-exists
    settings:
      k8s_server: https://10.1.2.1:6443
      k8s_token:
        from_secret: HIVE_TOKEN
      k8s_ca_crt:
        from_secret: HIVE_CA
      k8s_skip_tls: true
      namespace: hive
      init_templates:
        - ops/k8s/hive-ingress.yaml
        - ops/k8s/hive-redis.yaml
      templates:
        - ops/k8s/hive-deployment.yaml
      app_name: hive
    depends_on:
      - update-deploy
  - name: deploy-test-results
    image: zc2638/drone-k8s-plugin
    pull: if-not-exists
    settings:
      k8s_server: https://10.1.2.1:6443
      k8s_token:
        from_secret: HIVE_TOKEN
      k8s_ca_crt:
        from_secret: HIVE_CA
      k8s_skip_tls: true
      namespace: hive
      init_templates:
        - ops/k8s/test-results-ingress.yaml
      templates:
        - ops/k8s/test-results-deployment.yaml
      app_name: hive-test-results
    depends_on:
      - test-results-update-deploy
volumes:
  - name: reports
    temp: { }
image_pull_secrets:
  - sor-registry
  - sor-registry-proxy
---
kind: pipeline
type: kubernetes
name: updates

clone:
  depth: 1

steps:
  - name: node-upgrade
    image: registry-proxy.lab.sorijen.net.au/library/node:18-alpine
    commands:
      - cd src/Hive.FrontEnd
      - npm i --location=global pnpm
      - pnpm update -L
      - pnpm test:all
  - name: dotnet-upgrade
    image: mcr.microsoft.com/dotnet/sdk:8.0.100-preview.2
    commands:
      - bash ops/dotnet-update.sh
      - dotnet test ./src -c Test
  - name: git-push
    image: appleboy/drone-git-push
    settings:
      branch: master
      remote: ssh://git@github.com/SpiralLogic/hive.git
      force: false
      commit: true
      ssh_key:
        from_secret: github_ssh_key
      commit_message: "package updates from CI"
      author_name: Drone CI
      author_email: sorijen@sorijen.net.au
    depends_on:
      - dotnet-upgrade
      - node-upgrade
    failure: ignore
---
kind: pipeline
type: kubernetes
name: build sonar scanner image

clone:
  depth: 1

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: registry.lab.sorijen.net.au
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD
      repo: registry.lab.sorijen.net.au/sonar-scanner
      dockerfile: ops/dockerfile.sonar-scanner
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}