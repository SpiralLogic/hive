kind: pipeline
type: kubernetes
name: testing
steps:
  - name: frontend
    image: registry-proxy.lab.sorijen.net.au/library/node:18-alpine
    commands:
      - cd src/Hive.FrontEnd
      - npm i --location=global pnpm
      - pnpm install
      - pnpm test:all
      - mv reports/* /reports/
    volumes:
      - name: reports
        path: /reports
  - name: domain
    image: mcr.microsoft.com/dotnet/sdk:8.0.100-preview.2
    commands:
      - dotnet new tool-manifest || true
      - dotnet tool install dotnet-reportgenerator-globaltool
      - dotnet test --collect:"XPlat Code Coverage" ./src/Hive.Domain.Tests -c Test --settings ./src/Hive.Domain.Tests/runsettings.xml
      - mkdir -p ./domain-coverage/
      - mv src/Hive.Domain.Tests/TestResults/**/coverage.opencover.xml ./domain-coverage/
      - mv ./domain-coverage/coverage.opencover.xml ./domain-coverage/domain-coverage.opencover.xml
      - dotnet reportgenerator "-reports:./domain-coverage/domain-coverage.opencover.xml" "-targetdir:/reports" -reporttypes:Html
    volumes:
      - name: reports
        path: /reports
  - name: api
    image: mcr.microsoft.com/dotnet/sdk:8.0.100-preview.2
    commands:
      - dotnet new tool-manifest || true
      - dotnet tool install dotnet-reportgenerator-globaltool
      - dotnet test --collect:"XPlat Code Coverage" ./src/Hive.Api.Tests -c Test --settings ./src/Hive.Api.Tests/runsettings.xml
      - mkdir -p ./api-coverage/
      - mv src/Hive.Api.Tests/TestResults/**/coverage.opencover.xml ./api-coverage/
      - mv ./api-coverage/coverage.opencover.xml ./api-coverage/api-coverage.opencover.xml
      - dotnet reportgenerator "-reports:./api-coverage/api-coverage.opencover.xml" "-targetdir:/reports" -reporttypes:Html
    volumes:
      - name: reports
        path: /reports
  - name: sonar
    image: proxy.lab.sorijen.net.au/sonar-scanner
    depends_on:
      - frontend
      - domain
      - api
    volumes:
      - name: reports
        path: /reports
    environment:
      SONARQUBE_KEY:
        from_secret: SONARQUBE_KEY
    commands:
      - sed -i "s~\.\./~Hive\.FrontEnd/~g" /reports/lcov.info
      - node -v
      - dotnet new tool-manifest || true
      - dotnet tool install dotnet-sonarscanner
      - dotnet sonarscanner begin /k:hive /s:ops/SonarQube.Analysis.xml /d:sonar.login=$SONARQUBE_KEY
      - dotnet build -c Test ./src
      - dotnet test ./src -c Test --collect:"XPlat Code Coverage" --settings ./src/Hive.Api.Tests/runsettings.xml
      - dotnet sonarscanner end /d:sonar.login=$SONARQUBE_KEY

volumes:
  - name: reports
    temp: { }
