kind: pipeline
type: kubernetes
name: tests

steps:
  - name: frontend
    image: node:19-alpine
    pull: always
    commands:
      - cd src/Hive.FrontEnd
      - corepack enable
      - corepack prepare pnpm@latest --activate
      - pnpm install --frozen-lockfile
      - pnpm test:all:report
      - mv reports/* /drone/src/reports/
      - sed -i "s~src/~/drone/src/src/Hive.FrontEnd/src/~g" /drone/src/reports/frontend/lcov.info
    volumes:
      - name: reports
        path: /drone/src/reports
  - name: backend
    image: registry.lab.sorijen.net.au/build-image:latest
    pull: always
    commands:
      - dotnet tool restore
      - dotnet-coverage collect --output-format cobertura dotnet test -c test src
      - reportgenerator "-reports:./output.cobertura.xml" "-sourcedirs:./src" "-assemblyfilters:+Hive.*;-*.Tests" "-targetdir:/drone/src/reports/backend"  -reporttypes:Html
      - dotnet-dotcover test -c Test --dcOutput=/drone/src/reports/backend/dotcover.html --dcReportType=HTML --dcHideAutoProperties "--dcFilters=+:Hive.*;-:*.Tests;-:function=.ctor"  ./src
    volumes:
      - name: reports
        path: /drone/src/reports
  - name: build
    image: plugins/kaniko:1.7.4-kaniko1.9.2
    settings:
      registry: registry.lab.sorijen.net.au
      username: 
        from_secret: REGISTRY_USER
      password: 
        from_secret: REGISTRY_PASSWORD
      repo: registry.lab.sorijen.net.au/hive
      dockerfile: ops/dockerfile
      tags:
      - latest
      - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}
  - name: sonar
    image: registry.lab.sorijen.net.au/build-image:latest
    pull: always
    depends_on:
      - backend
      - frontend
    volumes:
      - name: reports
        path: /drone/src/reports
    when:
      status:
      - success
      - failure
    environment:
      SONARQUBE_KEY:
        from_secret: SONARQUBE_KEY
      LANG: en_US.UTF-8
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
    commands:
      - sed -i "s~/source~/drone/src~g" /drone/src/ops/SonarQube.Analysis.xml
      - node -v
      - java -version
      - dotnet tool restore
      - dotnet-sonarscanner begin /k:hive /s:/drone/src/ops/SonarQube.Analysis.xml /d:sonar.token=$SONARQUBE_KEY
      - dotnet build ./src
      - dotnet-coverage collect --output-format xml dotnet test src
      - dotnet-sonarscanner end /d:sonar.token=$SONARQUBE_KEY
  - name: test-results
    image: plugins/kaniko:1.7.4-kaniko1.9.2
    depends_on:
      - frontend
      - backend
    volumes:
      - name: reports
        path: /drone/src/reports
    when:
      status:
      - success
      - failure
    settings:
      registry: registry.lab.sorijen.net.au
      enable_cache: false
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD
      repo: registry.lab.sorijen.net.au/hive-test-results
      dockerfile: ops/dockerfile.test-results
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}
  - name: gitleaks
    image: plugins/gitleaks
    settings:
      path: .
  - name: update-deploy
    image: alpine
    commands:
      - sed -i s~latest~${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}~g ops/k8s/hive-deployment.yaml
      - sed -i s~\"buildId\"~\"${DRONE_BUILD_NUMBER}\"~g ops/k8s/hive-deployment.yaml
    depends_on:
      - sonar
      - build
      - gitleaks
  - name: test-results-update-deploy
    when:
      status:
      - success
      - failure
    image: alpine
    commands:
      - sed -i s~latest~${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}~g ops/k8s/test-results-deployment.yaml
      - sed -i s~\"buildId\"~\"${DRONE_BUILD_NUMBER}\"~g ops/k8s/test-results-deployment.yaml
    depends_on:
      - test-results
  - name: deploy
    image: zc2638/drone-k8s-plugin
    settings:
      k8s_server: 
        from_secret: K8_SERVER
      k8s_token:
        from_secret: DEPLOY_TOKEN
      k8s_ca_crt:
        from_secret: DEPLOY_SA_CA
      k8s_skip_tls: true
      namespace: hive
      init_templates:
        - ops/k8s/hive-ingress.yaml
        - ops/k8s/hive-redis.yaml
      templates:
        - ops/k8s/hive-deployment.yaml
      app_name: hive
    depends_on:
      - update-deploy
  - name: deploy-test-results
    image: zc2638/drone-k8s-plugin
    when:
      status:
      - success
      - failure
    settings:
      k8s_server:
        from_secret: K8_SERVER
      k8s_token:
        from_secret: DEPLOY_TOKEN
      k8s_ca_crt:
        from_secret: DEPLOY_SA_CA
      k8s_skip_tls: true
      namespace: hive
      init_templates:
        - ops/k8s/test-results-ingress.yaml
      templates:
        - ops/k8s/test-results-deployment.yaml
      app_name: hive-test-results
    depends_on:
      - test-results-update-deploy
  - name: Game Card
    image: registry.lab.sorijen.net.au/card-maker:latest
    pull: always
    commands:
      - drone-card-maker ops/adaptive-card/game-card.json
    depends_on:
      - deploy
    when:
      status:
        - success
        - failure
  - name: Test Results Card
    image: registry.lab.sorijen.net.au/card-maker:latest
    pull: always
    commands:
      - drone-card-maker ops/adaptive-card/test-results.json
    depends_on:
      - test-results-update-deploy
    when:
      status:
        - success
        - failure
volumes:
  - name: reports
    temp: { }

image_pull_secrets:
  - sor-registry
  - sor-registry-proxy
trigger:
  event:
    - push
    - pull_request
    - custom
---
kind: pipeline
type: kubernetes
name: hive deploy

clone:
  depth: 50

steps:
  - name: update-deploy
    image: alpine
    commands:
      - sed -i s~latest~${DRONE_BUILD_PARENT}-${DRONE_COMMIT_SHA:0:8}~g ops/k8s/hive-deployment.yaml
      - sed -i s~\"buildId\"~\"${DRONE_BUILD_PARENT}\"~g ops/k8s/hive-deployment.yaml
  - name: test-results-update-deploy
    image: alpine
    commands:
      - sed -i s~latest~${DRONE_BUILD_PARENT}-${DRONE_COMMIT_SHA:0:8}~g ops/k8s/test-results-deployment.yaml
      - sed -i s~\"buildId\"~\"${DRONE_BUILD_PARENT}\"~g ops/k8s/test-results-deployment.yaml 
  - name: deploy
    image: zc2638/drone-k8s-plugin
    settings:
      k8s_server:
        from_secret: K8_SERVER
      k8s_token:
        from_secret: DEPLOY_TOKEN
      k8s_ca_crt:
        from_secret: DEPLOY_SA_CA
      k8s_skip_tls: true
      namespace: hive
      init_templates:
        - ops/k8s/hive-ingress.yaml
        - ops/k8s/hive-redis.yaml
      templates:
        - ops/k8s/hive-deployment.yaml
      app_name: hive
    depends_on:
      - update-deploy
  - name: deploy-test-results
    image: zc2638/drone-k8s-plugin
    settings:
      k8s_server:
        from_secret: K8_SERVER
      k8s_token:
        from_secret: DEPLOY_TOKEN
      k8s_ca_crt:
        from_secret: DEPLOY_SA_CA
      k8s_skip_tls: true
      namespace: hive
      init_templates:
        - ops/k8s/test-results-ingress.yaml
      templates:
        - ops/k8s/test-results-deployment.yaml
      app_name: hive-test-results
    depends_on:
      - test-results-update-deploy
image_pull_secrets:
  - sor-registry
  - sor-registry-proxy
trigger:
  event:
    - promote
    - rollback
---
kind: pipeline
type: kubernetes
name: upgrades

clone:
  depth: 1
steps:
  - name: node-upgrade
    image: node:19-alpine
    commands:
      - cd src/Hive.FrontEnd
      - npm i --location=global pnpm
      - pnpm update -L
      - pnpm test:all
  - name: dotnet-upgrade
    image: mcr.microsoft.com/dotnet/sdk:8.0-jammy
    commands:
      - bash ops/dotnet-update.sh
      - dotnet test ./src -c Test
  - name: git-push
    image: appleboy/drone-git-push
    settings:
      branch: master
      remote: ssh://git@github.com/SpiralLogic/hive.git
      force: false
      commit: true
      ssh_key:
        from_secret: github_ssh_key
      commit_message: "package updates from CI"
      author_name: Drone CI
      author_email: sorijen@sorijen.net.au
    depends_on:
      - dotnet-upgrade
      - node-upgrade
trigger:
  event:
    - cron
  cron:
    include:
      - upgrades
---
kind: pipeline
type: kubernetes
name: create-build-image

clone:
  depth: 1
steps:
  - name: build
    image: plugins/kaniko:1.7.4-kaniko1.9.2
    settings:
      registry: registry.lab.sorijen.net.au
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD
      repo: registry.lab.sorijen.net.au/build-image
      dockerfile: ops/dockerfile.build-image
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}
image_pull_secrets:
  - sor-registry
  - sor-registry-proxy
trigger:
  event:
    - cron
  cron:
    include:
      - create-build-image
---
kind: pipeline
type: kubernetes
name: create-card-maker

clone:
  depth: 1
steps:
  - name: build
    image: plugins/kaniko:1.7.4-kaniko1.9.2
    settings:
      registry: registry.lab.sorijen.net.au
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD
      repo: registry.lab.sorijen.net.au/card-maker
      dockerfile: ops/dockerfile.card-maker
      context: ops/card-plugin
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}
image_pull_secrets:
  - sor-registry
  - sor-registry-proxy
trigger:
  event:
    - cron
  cron:
    include:
      - create-card-maker