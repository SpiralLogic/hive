FROM mcr.microsoft.com/dotnet/sdk:8.0.100-preview.1
SHELL [ "/bin/bash", "-l", "-c" ]

WORKDIR /source

COPY --from=registry-proxy.lab.sorijen.net.au/library/node:18-slim /usr/lib /usr/lib
COPY --from=registry-proxy.lab.sorijen.net.au/library/node:18-slim /usr/local/share /usr/local/share
COPY --from=registry-proxy.lab.sorijen.net.au/library/node:18-slim /usr/local/lib /usr/local/lib
COPY --from=registry-proxy.lab.sorijen.net.au/library/node:18-slim /usr/local/include /usr/local/include
COPY --from=registry-proxy.lab.sorijen.net.au/library/node:18-slim /usr/local/bin /usr/local/bin

ENV JAVA_HOME /usr/lib/jvm/msopenjdk-17-amd64
ENV PATH "${JAVA_HOME}/bin:${PATH}"
COPY --from=mcr.microsoft.com/openjdk/jdk:17-ubuntu $JAVA_HOME $JAVA_HOME

ARG SONARQUBE_KEY
ENV LANG en_US.UTF-8
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
COPY . /source
RUN sed -i "s~\.\./~src/Hive\.FrontEnd/~g" /source/reports/lcov.info
RUN node -v
RUN dotnet new tool-manifest || true
RUN dotnet tool install dotnet-sonarscanner
RUN dotnet sonarscanner begin /k:hive /s:/source/ops/SonarQube.Analysis.xml /d:sonar.login=$SONARQUBE_KEY
RUN dotnet build -c Test /source/src
RUN dotnet test ./src -c Test --collect:"XPlat Code Coverage" --settings /source/src/Hive.Api.Tests/runsettings.xml

RUN dotnet sonarscanner end /d:sonar.login=$SONARQUBE_KEY
